@page "/microcycle"
@using LiftTracker.Data
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject NavigationManager NavigationManager;
@inject IConfiguration Configuration;
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize];

<div class="row">
	<div class="row">
		@if (MicroCycle?.Sessions != null) {
			@foreach (var session in MicroCycle.Sessions)
			{
				<div class="col-12 col-lg-2">
					<div class="@(!session.IsComplete ? "card" : "card3") schedule-table text-center col-12 session-card my-3" @onclick="(() => OnSessionClick(session.Id))">
						<h2>@session.DayOfTheWeek</h2>
						<table>
							@if (session.SessionExercises != null) {
								@foreach (var sessionExercise in session.SessionExercises)
								{
									<tr>
										<td>
											@($"{new LiftTrackerContextBuilder(Configuration).Build().Exercises.FirstOrDefault(x => sessionExercise != null && x.Id == sessionExercise.ExerciseId)?.Name}")
											@if (session.IsComplete && sessionExercise?.Sets != null) {
												foreach (var set in sessionExercise.Sets)
												{
													<div>
														@($"{set?.Load?.ToString(set.Load.Value % 1 == 0 ? "0" : "0.0")} x {set?.Reps} reps @ {set?.Rpe} RPE")
													</div>
												}
											}
											else
											{
												<div class="statnum">
													@($"{sessionExercise?.Sets?.FirstOrDefault()?.TargetRpe}-{sessionExercise?.Sets?.FirstOrDefault()?.TargetRpe+1} RPE")
												</div>
												@($"{sessionExercise?.Sets?.Count()} sets {new LiftTrackerContextBuilder(Configuration)?.Build()?.RepRanges?.FirstOrDefault(x => sessionExercise != null && x.Id == sessionExercise.RepRangeId)?.Low} - {new LiftTrackerContextBuilder(Configuration).Build().RepRanges.FirstOrDefault(x => sessionExercise != null && x.Id == sessionExercise.RepRangeId)?.High} reps")
											}
										</td>
									</tr>
								}
							}
						</table>
					</div>
				</div>
			}
		}
	</div>
</div>

@code {

	private MicroCycle? MicroCycle;

	protected override void OnInitialized()
	{
		using var context = new LiftTrackerContextBuilder(Configuration).Build();

		MicroCycle = context.MicroCycles
			.Include(x => x.Sessions)
			.ThenInclude(x => x.SessionExercises)
			.ThenInclude(x => x.Sets)
			.FirstOrDefault(x => x.Sessions != null && !x.Sessions.All(x => x.IsComplete));
	}

	public void StartWorkout()
	{
		NavigationManager.NavigateTo("/TrackWorkout");
	}

	public void OnSessionClick(int sessionId)
	{
		NavigationManager.NavigateTo($"/TrackWorkout/{sessionId}");
	}
}