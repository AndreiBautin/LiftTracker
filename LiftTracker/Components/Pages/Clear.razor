@page "/clear"
@using LiftTracker.Data
@using LiftTracker.UseCases
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject NavigationManager NavigationManager;
@inject IConfiguration Configuration;
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize];
@inject AuthenticationStateProvider AuthenticationStateProvider;

<h2>Clear Macrocycle</h2>

<div class="row">
	<button class="btn-outline-light btn rounded-pill my-3" @onclick="OnClear">Clear MacroCycle</button>
</div>

@code {
	private async Task OnClear()
	{
		using var context = new LiftTrackerContextBuilder(Configuration).Build();
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		var userId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
		var macroCycles = context.MacroCycles
				.Include(x => x.TrainingBlocks)
				.ThenInclude(x => x.MesoCycles)
				.ThenInclude(x => x.MicroCycles)
				.ThenInclude(x => x.Sessions)
				.ThenInclude(x => x.SessionExercises)
				.ThenInclude(x => x.Sets)
				.Where(x => x.ApplicationUserId == userId)
				.ToList();
		context.RemoveRange(macroCycles);
		context.SaveChanges();
		NavigationManager.NavigateTo("/", true);
	}
}